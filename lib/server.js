// Generated by CoffeeScript 1.4.0
(function() {
  var baseErrorHandler, bodyParser, cookieParser, express, extless, favicon, http, loglet, methodOverride, path, run, signedSecret;

  http = require('http');

  express = require('express');

  cookieParser = require('cookie-parser');

  favicon = require('serve-favicon');

  bodyParser = require('body-parser');

  methodOverride = require('method-override');

  extless = require('./extless');

  path = require('path');

  loglet = require('loglet');

  baseErrorHandler = function(options) {
    return function(err, req, res, next) {
      var accept;
      loglet.error('REQUEST_ERROR', req.method, req.url, req.body, err);
      if (err.status) {
        res.statusCode = err.status;
      }
      if (err.statusCode < 400) {
        res.statusCode = 500;
      }
      if ('prod' !== env) {
        console.error(err.stack);
      }
      accept = req.headers.accept || '';
      return res.json(err.status, err);
    };
  };

  signedSecret = 'this-is-the-top-secret';

  run = function(argv) {
    var BASE_DIR, app;
    loglet.setKeys(argv.debug || []);
    BASE_DIR = process.cwd();
    app = express();
    app.set('url', 'http://localhost');
    app.set('port', 8080);
    app.use(cookieParser(signedSecret));
    app.use(bodyParser.json());
    app.use(bodyParser.urlencoded({
      extended: true
    }));
    app.use(methodOverride());
    app.use(extless());
    app.use(function(req, res, next) {
      loglet.debug('server.request', req.method, req.url, res.statusCode);
      return next();
    });
    app.use(express["static"](path.join(BASE_DIR, 'public')));
    app.use(function(req, res, next) {
      loglet.debug('server.request', req.method, req.url, res.statusCode);
      return next();
    });
    app.use(baseErrorHandler({
      showStack: true,
      dumpExceptions: true
    }));
    http.createServer(app).listen(app.get('port'));
    return loglet.debug('server.start', app.get('port'));
  };

  module.exports = {
    run: run
  };

}).call(this);
